buildscript {
	ext {
		springBootVersion = '1.3.5.RELEASE'
	}
	repositories {
		mavenCentral()
	}
	dependencies {
		classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}") 
	}
}

apply plugin: 'java'
apply plugin: 'eclipse'
apply plugin: 'spring-boot' 

jar {
	baseName = 'Demospringboot'
	version = '0.0.1-SNAPSHOT'
}
sourceCompatibility = 1.8
targetCompatibility = 1.8

repositories {
	mavenCentral()
}


dependencies {
	compile('org.springframework.boot:spring-boot-starter-data-rest')
	compile('org.springframework.boot:spring-boot-starter-jersey')
	compile('org.springframework.boot:spring-boot-starter-web')
	compile('org.springframework.boot:spring-boot-starter-data-jpa')
	compile('org.json:json:20090211')
	compile 'org.springframework.boot:spring-boot-starter-data-actuator'
	compile group: 'org.springframework.security', name: 'spring-security-core', version: '2.0.2'
    compile group: 'org.springframework.security', name: 'spring-security-crypto', version: '3.1.0.RELEASE'


	/* HTTP */
	compile 'com.squareup.okhttp3:okhttp:3.4.1'
	compile 'com.squareup.okhttp3:okhttp-urlconnection:3.4.1'
	compile 'com.squareup.okhttp3:logging-interceptor:3.4.1'
	compile('com.squareup.retrofit2:converter-simplexml:2.1.0') {
		exclude group: 'stax', module: 'stax-api'
		exclude group: 'stax', module: 'stax'
		exclude group: 'xpp3', module: 'xpp3'
	}
	compile 'com.squareup.retrofit2:retrofit:2.0.1'
	
	compile 'org.springframework.boot:spring-boot-starter-data-elasticsearch:1.2.0.RELEASE'
   // compile 'org.springframework.data:spring-data-cassandra:1.1.1.RELEASE'

	compile group: 'org.projectlombok', name: 'lombok', version: '1.16.4'
	//compileOnly "org.projectlombok:lombok:1.16.12"
	
	runtime('mysql:mysql-connector-java')
	testCompile('org.springframework.boot:spring-boot-starter-test') 
	
	
	// http://mvnrepository.com/artifact/com.fasterxml.jackson.datatype/jackson-datatype-json-org
    compile group: 'com.fasterxml.jackson.datatype', name: 'jackson-datatype-json-org', version: '2.2.3'
    
    compile("org.springframework.boot:spring-boot-starter-data-mongodb")
}


eclipse {
	classpath {
		 containers.remove('org.eclipse.jdt.launching.JRE_CONTAINER')
		 containers 'org.eclipse.jdt.launching.JRE_CONTAINER/org.eclipse.jdt.internal.debug.ui.launcher.StandardVMType/JavaSE-1.8'
	}
}
